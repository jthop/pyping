version: "3.5"
services:
  pinger:
    image: pinger:latest
    container_name: pinger
    networks:
      - traefik
      - pinger
    expose:
      - 80
    environment:
      FLASK_ENV: "production"
      INSIDE_CONTAINER: "true"
      MONGODB_USERNAME: "root"
      MONGODB_PASSWORD: "mongo_pw"
      MONGODB_DATABASE: "db"
      MONGODB_HOSTNAME: "mongodb"
    volumes:
      - ./app/config:/app/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.pinger-https-rtr.tls=true
      - traefik.http.routers.pinger-https-rtr.tls.certresolver=my_route53challenge
      - traefik.http.routers.pinger-https-rtr.rule=Host(`pinger.mode14.net`)
      - traefik.http.routers.pinger-https-rtr.entrypoints=websecure
    build:
      dockerfile: Dockerfile
      context: ./app

  nginx:
    container_name: nginx
    networks:
      - traefik
    image: nginx
    volumes:
     #- ./templates:/etc/nginx/templates
      - ./nginx/:/usr/share/nginx/html:ro
    expose:
      - 80
    restart: unless-stopped
    environment:
      - NGINX_HOST=static.mode14.net
      - NGINX_PORT=80
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=my_route53challenge
      - traefik.http.routers.nginx.rule=Host(`pinger.mode14.net`) && PathPrefix(`/static`)
      - traefik.http.routers.nginx.entrypoints=websecure
      
  agent:
    expose:
      - 6768
    container_name: agent
    image: agent
    network_mode: host
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: ./agent
    
  cron:
    container_name: cron
    image: cron:latest
    networks:
      - traefik
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
      context: ./cron
      
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "mongo_pw"
      MONGO_INITDB_DATABASE: "db"
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodb-pinger:/data/db
    networks:
      - pinger
    restart: unless-stopped
          
  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - pinger
    restart: unless-stopped

    
volumes:
  mongodb-pinger:
    external: true
networks:
  traefik:
    external: true
  pinger:
    external: true


